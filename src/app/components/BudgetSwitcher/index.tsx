"use client"import { FC, ElementType } from "react"import { ChevronsUpDown, Plus } from "lucide-react"import {    DropdownMenu,    DropdownMenuContent,    DropdownMenuItem,    DropdownMenuLabel,    DropdownMenuSeparator,    DropdownMenuTrigger,} from "@/components/ui/dropdown-menu"import {    SidebarMenu,    SidebarMenuButton,    SidebarMenuItem,    useSidebar,} from "@/components/ui/sidebar"type BudgetProps = {    name: string,    logo: ElementType,    plan: string}interface Props {    budgets: BudgetProps[]}export const BudgetSwitcher:FC<Props> = ({ budgets }) => {    const { isMobile } = useSidebar()    const activeBudget = budgets[0];    return <SidebarMenu>            <SidebarMenuItem>                <DropdownMenu>                    <DropdownMenuTrigger>                        <SidebarMenuButton  size="lg" className="data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground">                            <div className="flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground">                                <activeBudget.logo className="size-4" />                            </div>                            <div className="grid flex-1 text-left text-sm leading-tight">                                <span className="truncate font-semibold">                                    {activeBudget.name}                                </span>                                <span className="truncate text-xs">{activeBudget.plan}</span>                            </div>                            <ChevronsUpDown className="ml-auto" />                        </SidebarMenuButton>                    </DropdownMenuTrigger>                    <DropdownMenuContent className="w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg" align="start" side={isMobile ? "bottom" : "right"} sideOffset={4}>                        <DropdownMenuLabel className="text-xs text-muted-foreground">                            Budgets                        </DropdownMenuLabel>                        {budgets?.map((budget) => (                            <DropdownMenuItem                                key={budget.name}                                className="gap-2 p-2"                            >                                <div className="flex size-6 items-center justify-center rounded-sm border">                                    <budget.logo className="size-4 shrink-0" />                                </div>                                {budget.name}                            </DropdownMenuItem>                        ))}                        <DropdownMenuSeparator />                        <DropdownMenuItem className="gap-2 p-2">                            <div className="flex size-6 items-center justify-center rounded-md border bg-background">                                <Plus className="size-4" />                            </div>                            <div className="font-medium text-muted-foreground">Add budget</div>                        </DropdownMenuItem>                    </DropdownMenuContent>                </DropdownMenu>            </SidebarMenuItem>    </SidebarMenu>}